{"version":3,"sources":["fonts/MitrRegular.ttf","fonts/OpenSans-Regular.ttf","ShitDashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","list","width","dateFormat","require","ShitDashboard","window","onload","ohWow","OhSend","axios","get","then","response","data","setDataBoxR","OhReceived","TimeRanger","MonthMenu","handleClickxxB3","handleClickxxB2","handleClickxxB1","useState","open","setOpen","OpenconfirmAccept","setOpenconfirmAccept","setOHwow","ShowAddressxx","setShowAddressxx","setShowMonthsxx","DateTime","setDateTime","Monthx","setMonthx","Yearx","setYearx","DataBoxL","setDataBoxL","DataBoxR","DataBoxRec","setDataBoxRec","openx","setOpenx","handleClickxx","item","console","log","Id_parcel","openB1","setOpenB1","openB2","setOpenB2","openB3","setOpenB3","React","right","state","setState","toggleDrawer","side","event","SName","setSName","SPhone","setSPhone","Addressza","setAddressza","RName","setRName","RPhone","setRPhone","Addressza2","setAddressza2","PName","setPName","Dparcel","setDparcel","RRName","setRRName","GetIDParcel","setGetIDParcel","setSNameR","setSPhoneR","setSAddressR","setRNameR","setRPhoneR","setRAddressR","PNameR","setPNameR","setDparcelR","setRRNameR","checked","setChecked","handleChange","target","value","Date","SelectedDate","setSelectedDate","Monthza","setMonthza","Yearza","setYearza","ShitTooltip","withStyles","tooltip","fontSize","maxWidth","Tooltip","BoxStsProps1","bgcolor","borderColor","color","m","border","fontFamily","style","height","textAlign","BoxStsProps2","classes","ShowData","info","params","id","dataSpecific","map","Sender_Name","Sender_Phone","Sender_Address","Receiver_Name","Receiver_Phone","Receiver_Address","Parcel_Name","Parcel_Description","Real_Receiver_Name","ShowHover","DAddress","ParcelShit","Date_Time","ShortAddress","split","DropdownMonth","MenuItem","key","Month","onChange","fullwidth","moment","format","Year","SelectAccept","handleClickOpenConfirmAccept","MapdataThree","className","TransitionComponent","Zoom","title","placement","onClick","status","catch","error","DropdownAddress","ID_ADDRESS","Address_Full","Address_Name","handleClose","location","reload","handleClickCloseConfirmAccept","useEffect","fixed","class","AppBar","position","Toolbar","Grid","xs","sm","md","lg","xl","Typography","variant","gutterBottom","IconButton","edge","aria-label","Drawer","anchor","onClose","role","Card","elevation","DatePicker","openTo","orientation","inputProps","views","date","fullDate","SetMonth","Button","size","Dialog","fullWidth","aria-labelledby","DialogTitle","DialogContent","name","onSubmit","e","preventDefault","setTimeout","formData","post","alert","PostShit","TextField","required","autoFocus","type","label","InputLabelProps","FormControl","InputLabel","htmlFor","Select","native","select","disabled","multiline","rows","InputProps","readOnly","DialogActions","form","container","spacing","Badge","badgeContent","length","Collapse","in","List","table","ListItem","button","ListItemAvatar","Avatar","ListItemText","Box","display","justifyContent","borderRadius","Alert","severity","AlertTitle","Divider","DialogContentText","accept","Check","put","Accept","margin","Radio","App","Boolean","hostname","match","ReactDOM","render","utils","DateFnsUtils","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.503be476.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MitrRegular.1f6d643f.ttf\";","module.exports = __webpack_public_path__ + \"static/media/OpenSans-Regular.3ed9575d.ttf\";","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport moment from 'moment'\nimport Box from \"@material-ui/core/Box\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Card from '@material-ui/core/Card';\nimport Zoom from '@material-ui/core/Zoom';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport Radio from '@material-ui/core/Radio';\n// import socketIOClient from 'socket.io-client';\nimport Avatar from '@material-ui/core/Avatar';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Select from '@material-ui/core/Select';\nimport DoneIcon from '@material-ui/icons/Done';\nimport FaceIcon from '@material-ui/icons/Face';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport {DatePicker} from '@material-ui/pickers';\nimport Divider from \"@material-ui/core/Divider\";\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport ListItem from '@material-ui/core/ListItem';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { withStyles} from \"@material-ui/core/styles\";\nimport { FaBoxOpen, FaReceipt} from \"react-icons/fa\";\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    list: { width: 250}\n  });\n\nvar dateFormat = require('dateformat');\nconst ShitDashboard =()=>{\n    \n    window.onload = function() {\n        ohWow();\n        OhSend();\n        OhResponse();\n        OhReceived ();\n        TimeRanger();\n        MonthMenu();\n        handleClickxxB3();\n        handleClickxxB2();\n        handleClickxxB1();\n\n    }\n    \n    const [open, setOpen] = useState(false);\n    const [OpenconfirmAccept, setOpenconfirmAccept] = useState(false);\n    const [OpenconfirmReject, setOpenconfirmReject] = useState(false);\n\n    const [OHwow, setOHwow] = useState();\n    const [ShowAddressxx, setShowAddressxx] = useState();\n    const [ShowMonthsxx, setShowMonthsxx] = useState();\n    const [DateTime, setDateTime] = useState();\n    const [Monthx, setMonthx] = useState();\n    const [Yearx, setYearx] = useState();\n    const [TinyAdderess, setTinyAdderess] = useState();\n    const [DataBoxL, setDataBoxL] = useState([]);\n    const [DataBoxR, setDataBoxR] = useState([]);\n    const [DataBoxRec, setDataBoxRec] = useState([]);\n\n\n    const [openx, setOpenx] = useState(true);\n    const handleClickxx=(item)=> {\n        console.log(\"Handle Clicked....\"+item.Id_parcel);\n        console.log(openx)\n        setOpenx({...openx,[item.Id_parcel]:!openx[item.Id_parcel]});\n        }\n    const [openB1, setOpenB1] = useState(true);\n    const handleClickxxB1=(item)=> {\n        console.log(\"Handle Clicked....\"+'B1');\n        console.log(openB2)\n        setOpenB1({...openB1,['B1']:!openB1['B1']});\n        }\n    const [openB2, setOpenB2] = useState(true);\n    const handleClickxxB2=(item)=> {\n        console.log(\"Handle Clicked....\"+'B2');\n        console.log(openB2)\n        setOpenB2({...openB2,['B2']:!openB2['B2']});\n        }\n    const [openB3, setOpenB3] = useState(true);\n    const handleClickxxB3=(item)=> {\n        console.log(\"Handle Clicked....\"+'B3');\n        console.log(openB3)\n        setOpenB3({...openB3,['B3']:!openB3['B3']});\n        }\n\n        const [state, setState] = React.useState({\n            right: false\n          });\n        const toggleDrawer = (side, open) => event => {\n        setState({ ...state, [side]: open });\n        };\n        const sideList = side => (\n            <div\n              className={classes.list}\n              role=\"presentation\"\n            //   id=\"borderTest\"\n              >\n                <Card elevation={1} variant=\"outlined \"  id='shitCardTop1'>\n                    <h3 className='text-center p-4' id='useFont'>เลือกเดือน</h3>\n                </Card>\n                <Card elevation={5}>\n                    <div class='text-center ml-3 m-3 p-1' id='shitCardxx'>\n                        <DatePicker\n                            id='shitCardxx'\n                            variant=\"inline\"\n                            openTo=\"month\"\n                            orientation=\"portrait\"\n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                \n                            // animateYearScrolling='true'\n                            views={[\"year\", \"month\"]}\n                            value={SelectedDate}\n                            onChange={(date)=>{SetMonth(date)}}/>\n                    \n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>{Reload()}} size=\"large\" id='Spacing'>\n                        ล้างค่า\n                        </Button>\n                    </div>\n                </Card>\n            </div>\n          );\n\n    const [SName, setSName] = useState([]); \n    function SNameChange (e){ \n        setSName(e.target.value) }\n    const [SPhone, setSPhone] = useState();\n    function SPhonehange (e){ \n        setSPhone(e.target.value) }\n    const [Addressza, setAddressza] = useState(\" \");\n      \n    \n    const [RName, setRName] = useState();\n    function RNameChange (e){ \n        setRName(e.target.value) }  \n    const [RPhone, setRPhone] = useState();\n    function RPhoneChange (e){ \n        setRPhone(e.target.value) }\n    const [Addressza2, setAddressza2] = useState();\n        \n    \n    const [PName, setPName] = useState();\n    function PNameChange (e){ \n        setPName(e.target.value) }\n    const [Dparcel, setDparcel] = useState();\n    function DparcelChange (e){ \n        setDparcel(e.target.value) }\n    \n    const [RRName, setRRName] = useState();\n    function RRNameChange (e){ \n        setRRName(e.target.value) }\n    /*\n    ! Modal side\n    */\n\n    const [GetIDParcel, setGetIDParcel] = useState();\n    const [SNameR, setSNameR] =useState();\n    const [SPhoneR, setSPhoneR] =useState();\n    const [SAddressR, setSAddressR] =useState();\n\n    const [RNameR, setRNameR] =useState();\n    const [RPhoneR, setRPhoneR] =useState();\n    const [RAddressR, setRAddressR] =useState();\n\n    const [PNameR, setPNameR] =useState();\n    const [DparcelR, setDparcelR] =useState();\n\n    const [RRNameR, setRRNameR] = useState();\n    const [checked, setChecked] = React.useState('ครบ');\n    const handleChange = event => {\n        setChecked(event.target.value);\n      };\n    const [SelectedDate, setSelectedDate] = useState(new Date()); \n    const [Monthza, setMonthza] = useState('All'); \n    const [Yearza, setYearza] = useState('All'); \n     /*\n    ! Right side\n    */\n\n    const ShitTooltip = withStyles({\n        tooltip: {\n          fontSize: \"1em\",\n          maxWidth: 700\n        }\n      })(Tooltip);\n    \n      const inputProps = {\n        fontFamily:'Mitr'\n      };\n      const BoxStsProps1 = {\n        bgcolor: \"background.paper\",\n        borderColor: \"coral\",\n        color: \"coral\",\n        m: 1,\n        border: 1,\n        fontFamily:'Mitr',\n        style: { width: \"5rem\", height: \"2rem\",textAlign: \"center\" }\n      };\n      const BoxStsProps2 = {\n        bgcolor: \"background.paper\",\n        borderColor: \"green\",\n        color: \"green\",\n        m: 1,\n        border: 1,\n        fontFamily:'Mitr',\n        style: { width: \"5rem\", height: \"2rem\",textAlign: \"center\" }\n      };\n      const classes = useStyles();\n\n    function PushParcel (e){\n        e.preventDefault()\n        setTimeout(() => {\n            setOpen(false);\n            PostShit();\n            }, 500);  \n    /*\n    ! When submit\n    */\n        }\n\n    function PostShit (e){\n\n        var formData = {\n            SName:SName,\n            SPhone:SPhone,\n            Addressza:Addressza,\n            RName:RName,\n            RPhone:RPhone,\n            Addressza2:Addressza2,\n            PName:PName,\n            Dparcel:Dparcel,\n            DateTime:DateTime,\n            Monthx:Monthx,\n            Yearx:Yearx\n        }\n\n        axios.post('http://localhost:4000/PostParcel', formData)\n            .then(function (response) {\n                console.log(response);\n          })\n            .catch(function (error) {\n                console.log(error);\n          });\n\n          TimeRanger();\n          \n            // eslint-disable-next-line\n            if (SName!==null&&SName!==\"\", SPhone!==null&&!SPhone==\"\", Addressza!==null&&Addressza!==\"\", RName!==null&&RName!==\"\",\n            // eslint-disable-next-line\n            RPhone!==null&&RPhone!==\"\", Addressza2!==null&&Addressza2!==\"\", PName!==null&&PName!==\"\", Dparcel!==null&&Dparcel!==\"\") {\n                return(alert('เพิ่มพัสดุสำเร็จ'),\n                window.location.reload(false)\n                );}\n        }\n        /*\n            !When post data\n        */\n\n    function ShowData (item){\n        \n        var info ={\n                params: {\n                    id:item.Id_parcel\n                }} \n        setGetIDParcel(item.Id_parcel)\n        \n        \n        axios.get('http://localhost:4000/specificdata',info)\n            .then(function (response){\n                const dataSpecific = response.data;\n                console.log(dataSpecific)\n\n                dataSpecific.map((item)=>\n                    setSNameR(item.Sender_Name),\n                    setSPhoneR(item.Sender_Phone),\n                    setSAddressR(item.Sender_Address),\n\n                    setRNameR(item.Receiver_Name),\n                    setRPhoneR(item.Receiver_Phone),\n                    setRAddressR(item.Receiver_Address),\n\n                    setPNameR(item.Parcel_Name),\n                    setDparcelR(item.Parcel_Description),\n                    setRRNameR(item.Real_Receiver_Name),\n        )})}\n        /*\n            !Get data to state\n        */\n\n    function Accept (){\n        var accept ={\n            id:GetIDParcel,\n            RRName:RRName,\n            Check:checked}\n        axios.put('http://localhost:4000/accept',accept)\n            .then(function (response){\n                ohWow();  \n        })}\n        /*\n            !When Accept\n        */\n\n    function Reject (){\n        var reject ={\n            id:GetIDParcel}\n        axios.put('http://localhost:4000/reject',reject)\n            .then(function (response){\n                ohWow();\n        })}\n        /*\n            !When Reject\n        */\n\n    function ShowHover (item){\n        const DAddress = item.Receiver_Address\n        const ParcelShit = item.Parcel_Name\n        const TimeRanger = item.Date_Time\n        return (\n            <p>\n             <p>{'สาขาปลายทาง: '+' '}{DAddress}</p>\n             <p>{'พัสดุ:'+' '}{ParcelShit}</p>\n             <p>{'วันเวลาที่ส่ง:'+' '}{TimeRanger}</p>\n            </p>\n        )}\n        /*\n            !When Hover\n        */\n\n    function ShortAddress(item){\n        const addressShort = item.Receiver_Address\n        const Shortaddress = addressShort.split('-')[0]\n        // console.log(SmallAddress)\n        return(Shortaddress)\n        }\n        /*\n            !Short Address\n        */\n    const Menu =()=>{\n        axios.get('http://localhost:4000/address')\n        .then(function(response){\n            const dataAddress = response.data;\n            const DropdownAddress = dataAddress.map((item) =>\n                    <option \n                    key={ item.ID_ADDRESS } \n                    value={ item.Address_Full} \n                    // onChange={ ()=> { setAddressza(item.Address_Name) }} \n                    fullwidth >\n                        { item.Address_Name}\n                </option>)\n                // <p>{item.Address_Name}</p>)\n                \n                setShowAddressxx(DropdownAddress)}\n               )\n        }\n        /*\n            !Dropdown Address\n        */\n    const MonthMenu =()=>{\n        axios.get('http://localhost:4000/months')\n        .then(function(response){\n            const dataMonth = response.data;\n            // console.table(dataMonth)\n            const DropdownMonth = dataMonth.map((item) =>\n                <MenuItem \n                    key={ item.Month } \n                    value={ item.Month} \n                    onChange={ ()=> { setMonthza(item.Month) }} \n                    fullwidth >\n                        { item.Month}\n                </MenuItem>)\n                // <p>{item.Address_Name}</p>)\n                \n                setShowMonthsxx(DropdownMonth)}\n               )\n        }\n        /*\n            !Dropdown Address\n        */\n    function TimeRanger(){\n        var DateTime = moment().format('L') +' '+moment().format('LT');\n        var Month = moment().format('MMMM'); \n        var Year = moment().format('YYYY');  \n        setDateTime(DateTime)\n        setMonthx(Month)\n        setYearx(Year)\n        console.log('TimeRanger')\n        console.log(DateTime)\n        // console.log(Month)\n        }\n        /*\n            !Time Ranger function\n        */\n\n    function SetMonth(date){\n        console.log(date)\n            var fullDate = date\n            setSelectedDate(fullDate)\n            var Month = dateFormat(fullDate, \"mmmm\");\n            var Year = dateFormat(fullDate, \"yyyy\");\n            setMonthza(Month)\n            setYearza(Year)\n            // console.log(fullDate)\n            // console.log(Month)\n            // console.log(Year)\n            OhSend();\n            OhReceived ();\n        \n    }\n    function SelectAccept(item){\n        ShowData (item);\n        handleClickOpenConfirmAccept();\n        }\n         /*\n            !ClickToAccept\n        */\n\n\n    function OhSend (){\n        var info ={\n            params: {\n                Monthza:Monthza,\n                Yearza:Yearza\n            }}\n\n        return axios.get('http://localhost:4000/OhSendx',info) \n        .then(function (response) {\n            const data = response.data;\n            // console.table(data)\n            setDataBoxL(data);\n            \n            })}\n    \n    function OhResponse (){\n        return axios.get('http://localhost:4000/OhResponse')\n        .then(function (response){\n            const data = response.data;\n            setDataBoxR(data);\n            // console.table(data)\n            })}\n\n    function OhReceived (){\n        var info ={\n            params: {\n                Monthza:Monthza,\n                Yearza:Yearza\n            }}\n\n        return axios.get('http://localhost:4000/OhReceived',info)\n        .then(function (response){\n            const data = response.data;\n            setDataBoxRec(data);\n            // console.table(data)\n            })}\n\n    function ohWow (){\n        axios.get('http://localhost:4000/wholedata')\n            .then(function (response){\n                const dataThree = response.data;\n                const MapdataThree = dataThree.map(( item )=>\n\n                    <div className='my-3'>\n                        \n                        <ShitTooltip TransitionComponent={Zoom} title={ShowHover (item)} placement=\"top\" id='ShitTooltip'>\n                            <button \n                                key ={item.Id_parcel} \n                                className={item.color} \n                                onClick={ ()=>{ ShowData( item ) } }>\n                                    <div className='text-left'>\n                                    <strong>{ShortAddress(item)}</strong><br/>\n                                    <strong>{'สถานะพัสดุ:'+' ' }{ item.status }</strong><br/>\n                                    <strong>{'พัสดุ:'+' '}{ item.Parcel_Name }</strong><br/>\n                                    <strong>{'วันเวลาที่สุง:'+' '}{item.Date_Time}</strong><br/>\n                                    </div>\n                            </button>\n                        </ShitTooltip>\n                        <hr/>\n                        \n                    </div>\n                    )\n                    setOHwow(MapdataThree)       \n        })\n            .catch(function (error) {\n                console.log(error);\n        });\n        /*\n        !Get Left-side data\n        */\n\n       Menu();\n    }\n     \n\n    \n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n        window.location.reload(false);\n    };\n    /*\n        !Open-Close Dialog\n    */\n\n    const handleClickOpenConfirmAccept = () => {\n            setOpenconfirmAccept(true);\n    };\n    const handleClickCloseConfirmAccept = () => {\n        setOpenconfirmAccept(false);\n    };\n    const handleClickCloseConfirmAcceptWihtAccept= (e) => {\n        e.preventDefault()\n        Accept();\n        setOpenconfirmAccept(false);\n        window.location.reload(false);\n        alert(\"ผู้รับคือ : \"+ RRName)\n    };\n    /*\n        !Open-Close-Submit Accept Dialog\n    */\n\n    const handleClickOpenConfirmReject = () => {\n        // eslint-disable-next-line\n        if (RNameR==null||RNameR==\"\"||RRNameR==undefined){\n            alert(\"กรุณาเลือกพัสดุ\");\n        }\n        else if (RNameR!==null||RNameR!==\"\"||RRNameR!==undefined){\n            // eslint-disable-next-line\n            if(RRNameR==\"-\"){\n                 setOpenconfirmReject(true);\n            }\n            // eslint-disable-next-line\n            else if(RRNameR!==\"-\"){\n                alert(\"คุณได้กดรับ/ปฏิเสธพัสดุไปเเล้ว\")\n            }\n        }\n    };\n    const handleClickCloseConfirmReject = () => {\n        setOpenconfirmReject(false);\n    };\n    const handleClickCloseConfirmRejectWihtReject= () => {\n        Reject();\n        setOpenconfirmReject(false);\n        window.location.reload(false);\n        alert(\" พัสดุนี้ถูกปฏิเสธ \")\n    };\n    /*\n        !Open-Close-Submit Reject Dialog\n    */\n    function Reload(){\n        window.location.reload(false)\n    }\n    useEffect(() => {\n        console.log(DataBoxL)\n        console.log(\"UseEffect\")\n        // console.log(SelectedDate)\n        console.log(\"Year\")\n        console.log(Yearza)\n    })\n\n//  {/************************************************ Header ***********************************************************/} \n    return(\n\n        <container fixed class='' id='shitUI'>\n            <AppBar position=\"fixed\" id='AppBar'>\n                <Toolbar >\n                {/* <button onClick={()=>TimeRanger()}>time</button> */}\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12} >\n                            <Typography variant=\"subtitle1\" gutterBottom class='mt-3'>\n                                    <h1 className='col col-xl-12 ' id='useFont'>ระบบส่ง-รับ พัสดุ <FaBoxOpen/></h1>\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={4} md={4} lg={4} xl={9} ></Grid>\n                        <Grid item xs={1} sm={1} md={1} lg={1} xl={1} >\n                            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(\"right\", true)} >\n                                <MenuIcon  />\n                            </IconButton>\n                        </Grid>\n                        \n                    </Toolbar>\n                </AppBar><br/><br/>\n                 \n            <div className='container col col-sm-7 col-md-12 col-xl-8 mt-5' id='shitUI'>\n            <Drawer\n                anchor=\"right\"\n                open={state.right}\n                onClose={toggleDrawer(\"right\", false)}\n            >\n                {sideList(\"right\")}\n            </Drawer>\n            \n        {/* <button onClick={()=>{ohWow()}}>ohWow</button> */}\n        {/* <button onClick={()=>{TimeRanger()}}>Time</button> */}\n    {/************************************************ Dialog ***********************************************************/} \n\n                <Dialog \n                fullWidth \n                open={open} \n                id='shitDialog'\n                className='p-5' \n                onClose={handleClose} \n                aria-labelledby=\"form-dialog-title\" \n                class='container col col-sm-4 col-md-12 col-xl-8'\n                >\n                    <DialogTitle \n                    id=\"form-dialog-title\" \n                    className='text-center mt-3'>\n                        <h1 id='useFont'>ข้อมูลพัสดุที่ส่ง </h1>\n                    </DialogTitle><hr/>\n                    <DialogContent>\n                    \n                    <DialogTitle \n                    id=\"form-dialog-title\" \n                    className='text-center'>\n                        <h4 id='useFont'>ผู้ส่ง { <FaceIcon/> }{ <ArrowForwardIcon/> }{ <FaBoxOpen/> }</h4>\n                    </DialogTitle>\n                    <form\n                    id=\"SEND\"\n                    name=\"SEND\"\n                    onSubmit={ PushParcel }>\n                        <TextField \n                        required \n                        autoFocus\n                        fullWidth\n                        type=\"text\"\n                        label=\"ชื่อผู้ส่ง\" \n                        id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ SName }\n                                onChange={ SNameChange }\n                        />\n                        <br/><br/>\n\n                        <TextField \n                        required\n                        fullWidth\n                        type=\"text\"\n                        id=\"phoneSender\" \n                        label=\"เบอร์โทรผู้ส่ง\" \n                        variant=\"outlined\"\n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={SPhone}\n                                onChange={ SPhonehange }\n                        /><br/><br/>\n\n                        <FormControl required id='formControl'>\n                        <InputLabel htmlFor=\"age-native-simple\" id='useFont'>ที่อยุ่สาขาที่ส่ง</InputLabel>\n                        <Select \n                        native\n                        required \n                        fullwidth\n                        id=\"addressdropdown\" \n                        className='col col-12 ' \n                        select label=\"ที่อยู่สาขาต้นทาง\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Addressza } \n                                onChange={ (e)=>{ setAddressza(e.target.value) } } \n                        >\n                            {ShowAddressxx}\n                        </Select>\n                        </FormControl><br/><br/>\n                        \n                                <TextField \n                                disabled\n                                variant=\"outlined\"  \n                                multiline rows=\"2\" \n                                id=\"addresstextarea\" \n                                InputProps={{readOnly: true, }} \n                                className='col col-11 float-right'\n                                    inputProps={{style: {fontFamily:'Mitr'}}} \n                                    InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                        value={ Addressza }\n                                /><br/><br/><br/><hr/>\n\n\n\n                        <DialogTitle \n                        id=\"form-dialog-title\" \n                        className='text-center'>\n                            <h4 id='useFont'>ผู้รับ { <FaBoxOpen/> }{ <ArrowForwardIcon/> }{ <FaceIcon/> }</h4>\n                        </DialogTitle>\n\n                        <TextField \n                        required \n                        fullWidth\n                        type=\"text\"\n                        label=\"ชื่อผู้รับ\" \n                        id=\"nameSender\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={RName}\n                                onChange={ RNameChange }\n                        /><br/><br/>\n                        <TextField \n                        required \n                        fullWidth\n                        type=\"text\"\n                        id=\"phoneSender\" \n                        variant=\"outlined\"\n                        label=\"เบอร์โทรผู้รับ\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={RPhone}\n                                onChange={ RPhoneChange }\n                        /><br/><br/>\n\n                        <FormControl required id='formControl'>\n                        <InputLabel htmlFor=\"age-native-simple\" id='useFont'>ที่อยุ่สาขาที่รับ</InputLabel>\n                        <Select \n                        native\n                        required \n                        fullwidth\n                        id=\"addressdropdown\" \n                        className='col col-12 ' \n                        select label=\"ที่อยู่สาขาปลายทาง\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                value={ Addressza2 } \n                                onChange={ (e)=>{ setAddressza2(e.target.value) } }  \n                        >\n                            { ShowAddressxx }\n                        </Select>\n                        </FormControl><br/><br/>\n                                <TextField  \n                                disabled\n                                variant=\"outlined\"  \n                                multiline rows=\"2\" \n                                id=\"addresstextarea\" \n                                className='col col-11 float-right' \n                                    inputProps={{style: {fontFamily:'Mitr'}}} \n                                    InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                        InputProps={{readOnly: true, }} \n                                        value={ Addressza2 }/><br/><br/><br/><hr/>\n\n                    \n\n                        <DialogTitle \n                        id=\"form-dialog-title\" \n                        className='text-center'>\n                        <h4 id='useFont'>ข้อมูลของพัสดุ { <FaBoxOpen/> } </h4>\n                        </DialogTitle>\n\n                        <TextField \n                        required \n                        fullWidth\n                        label=\"พัสดุ\" \n                        type=\"text\"\n                        value={PName}\n                        id=\"namePracel\" \n                        variant=\"outlined\" \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                onChange={ PNameChange }\n                        /><br/><br/>\n                                    \n                        <TextField \n                        required \n                        type=\"text\"\n                        value={Dparcel}\n                        variant=\"outlined\" \n                        multiline rows=\"4\"\n                        label=\"รายละเอียดของพัสดุ\"\n                        id=\"detailpraceltextarea\" \n                        onChange={ DparcelChange }\n                        className='col col-11 float-right' \n                            inputProps={{style: {fontFamily:'Mitr'}}} \n                            InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                         />\n                        </form>\n                    </DialogContent>\n                    \n                    <DialogActions>\n                    <br/><br/><br/><br/>\n                    <Button \n                    id='useFont'\n                    size=\"large\" \n                    color=\"secondary\"\n                    variant=\"contained\" \n                    onClick={ handleClose }  \n                    >\n                    {<DeleteIcon />}\n                        ยกเลิก\n                    </Button>\n\n                    <Button \n                    form=\"SEND\"\n                    id='useFont'\n                    size=\"large\" \n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\" \n                     >\n                    {<DoneIcon/>}\n                        ส่งพัสดุ\n                    </Button>\n\n                    </DialogActions>\n                    \n                </Dialog>\n  {/**************************************************** Data Both list *******************************************************/}\n        <div>\n        \n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={12} lg={4} xl={3}>\n            <Card \n            elevation={5} \n            variant=\"outlined \" \n            className='my-5 col  col-md-5 col-lg-5 col-xl-12' \n            onClick={handleClickOpen}\n            id='shitCardxx'>\n                <h2 className='pl-5 my-1 ' >{ <FaBoxOpen /> }{ <ArrowForwardIcon color=\"secondary\"/> }</h2>\n                <h4 className='mb-3 ml-5 ' id='useFont2'>ส่งพัสดุ</h4>\n                <div class='horizonLine2'/>\n                <br/>\n            </Card>\n        </Grid>\n        </Grid>\n            <Grid container spacing={5}>\n                <Grid item xs={12} sm={6} md={6} lg={4} xl={4} >\n                        <Card elevation={5} variant=\"outlined \" className='my-2' id='shitCardNext1'>\n                            <Card elevation={1} variant=\"outlined \"  id='shitCardTop1' onClick={()=>{handleClickxxB1(\"B1\")}}>\n                                <h3 \n                                className='text-center p-4' \n                                id='useFont'>ส่งแล้ว{' '}<Badge \n                                badgeContent={DataBoxR.length} \n                                color=\"secondary\">\n                                <MailIcon /></Badge>\n                                </h3>\n                            </Card>\n                                <Collapse key={'B1'} in={openB1['B1']}>\n                                <List>\n                                    {DataBoxL.map(item=>{\n                                        // console.log(item)\n                                        console.table(item.status)\n                                        return(\n                                        <div class='border border-top-0'>\n                                            <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                            <ListItemAvatar>\n                                            <Avatar>\n                                                <ImageIcon />\n                                            </Avatar>\n                                            </ListItemAvatar>\n                                                <ListItemText  key ={item.Id_parcel} >\n                                                    \n                                                    {item.status==\"ส่งแล้ว\"?\n                                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                        <Box borderRadius={30} {...BoxStsProps1} >ส่งแล้ว</Box>\n                                                    </Box>:\n                                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                    <Box borderRadius={30} {...BoxStsProps2} >รับแล้ว</Box>\n                                                    </Box>}\n                                                    \n                                                    <strong id='useFont'>{'สาขาที่รับ:'+' '}</strong><span id='useFont2'>{ShortAddress(item)}</span><br/>\n                                                    <strong id='useFont'>{'สถานะพัสดุ:'+' '}</strong><span id='useFont2'>{ item.status }</span><br/>\n                                                    <strong id='useFont'>{'พัสดุ:'+' '}</strong><span id='useFont2'>{ item.Parcel_Name }</span><br/>\n                                                    <strong id='useFont'>{'วันเวลาที่ส่ง:'+' '}</strong><span id='useFont2'>{item.Date_Time}</span><br/>\n                                                </ListItemText>\n                                            </ListItem>\n                    \n                                            <Collapse key={item.Id_parcel} in={openx[item.Id_parcel]}>\n                                            <div class='horizonLine3'/>\n                                                <ListItem key={item.Id_parcel}>\n                                            <ListItemAvatar>\n                                            </ListItemAvatar>\n                                                <ListItemText key ={item.Id_parcel}>\n                                                    <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                    <strong id='useFont'>{'ชื่อผู้ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Name}</span><br/>\n                                                    <strong id='useFont'>{'เบอร์โทรผู้ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Phone}</span><br/>\n                                                    <strong id='useFont'>{'สาขาที่ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Address}</span><br/><br/>\n                                                    <strong id='useFont'>{'ชื่อผู้รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Name}</span><br/>\n                                                    <strong id='useFont'>{'เบอร์โทรผู้รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Phone}</span><br/>\n                                                    <strong id='useFont'>{'สาขาที่รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Address}</span><br/><br/>\n                                                    <strong id='useFont'>{'พัสดุ:'+' '}</strong><span id='useFont2'>{item.Parcel_Name}</span><br/>\n                                                    <strong id='useFont'>{'รายละเอียดพัสดุ:'+' '}</strong><span id='useFont2'>{item.Parcel_Description}</span><br/><br/>\n                                                    <strong id='useFont'>{'ผู้ลงชื่อรับพัสดุ:'+' '}</strong><span id='useFont2'>{item.Real_Receiver_Name}</span><br/>\n\n                                                    <div className='row'>\n                                                    <div class=\"col col-3\"></div>\n                                                    <div class=\"col col-3\"></div>\n                                                        <div className='row col my-2'>\n                                                            <div className='row'>\n                                                                <div>\n                                                                    {item.status==\"ส่งแล้ว\"?\n                                                                     <Alert \n                                                                        key ={item.Id_parcel} \n                                                                        id='AlertButton'\n                                                                        severity=\"success\"\n                                                                        onClick={ ()=>{ SelectAccept(item) } }>\n                                                                        <AlertTitle id='useFont'>รับพัสดุ</AlertTitle>\n                                                                    </Alert> :null\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </ListItemText>\n                                                </ListItem>\n                                    </Collapse>\n                                    <Divider />\n                                    </div>\n                                    )})}\n                                </List>\n                                \n                                <List>\n                                    {DataBoxRec.map(item=>{\n                                        // console.log(item)\n                                        console.table(item.status)\n                                        return(\n                                        <div class='border border-top-0'>\n                                            <ListItem button key={item.Month} onClick={()=>{handleClickxx(item)}} >\n                                            <ListItemAvatar>\n                                            <Avatar>\n                                                <ImageIcon />\n                                            </Avatar>\n                                            </ListItemAvatar>\n                                                <ListItemText  key ={item.Id_parcel} >\n                                                    \n                                                    {item.status==\"ส่งแล้ว\"?\n                                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                        <Box borderRadius={30} {...BoxStsProps1} >ส่งแล้ว</Box>\n                                                    </Box>:\n                                                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                                                    <Box borderRadius={30} {...BoxStsProps2} >รับแล้ว</Box>\n                                                    </Box>}\n                                                    \n                                                    <strong id='useFont'>{'สาขาที่รับ:'+' '}</strong><span id='useFont2'>{ShortAddress(item)}</span><br/>\n                                                    <strong id='useFont'>{'สถานะพัสดุ:'+' '}</strong><span id='useFont2'>{ item.status }</span><br/>\n                                                    <strong id='useFont'>{'พัสดุ:'+' '}</strong><span id='useFont2'>{ item.Parcel_Name }</span><br/>\n                                                    <strong id='useFont'>{'วันเวลาที่ส่ง:'+' '}</strong><span id='useFont2'>{item.Date_Time}</span><br/>\n                                                </ListItemText>\n                                            </ListItem>\n                    \n                                            <Collapse key={item.Id_parcel} in={openx[item.Id_parcel]}>\n                                            <div class='horizonLine3'/>\n                                                <ListItem key={item.Id_parcel}>\n                                            <ListItemAvatar>\n                                            </ListItemAvatar>\n                                                <ListItemText key ={item.Id_parcel}>\n                                                    <h2 className='' id='useFont'>รายละเอียด</h2><br/>\n                                                    <strong id='useFont'>{'ชื่อผู้ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Name}</span><br/>\n                                                    <strong id='useFont'>{'เบอร์โทรผู้ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Phone}</span><br/>\n                                                    <strong id='useFont'>{'สาขาที่ส่ง:'+' '}</strong><span id='useFont2'>{item.Sender_Address}</span><br/><br/>\n                                                    <strong id='useFont'>{'ชื่อผู้รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Name}</span><br/>\n                                                    <strong id='useFont'>{'เบอร์โทรผู้รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Phone}</span><br/>\n                                                    <strong id='useFont'>{'สาขาที่รับ:'+' '}</strong><span id='useFont2'>{item.Receiver_Address}</span><br/><br/>\n                                                    <strong id='useFont'>{'พัสดุ:'+' '}</strong><span id='useFont2'>{item.Parcel_Name}</span><br/>\n                                                    <strong id='useFont'>{'รายละเอียดพัสดุ:'+' '}</strong><span id='useFont2'>{item.Parcel_Description}</span><br/><br/>\n                                                    <strong id='useFont'>{'ผู้ลงชื่อรับพัสดุ:'+' '}</strong><span id='useFont2'>{item.Real_Receiver_Name}</span><br/>\n\n                                                    <div className='row'>\n                                                    <div class=\"col col-3\"></div>\n                                                    <div class=\"col col-3\"></div>\n                                                        <div className='row col my-2'>\n                                                            <div className='row'>\n                                                                <div>\n                                                                    {item.status==\"ส่งแล้ว\"?\n                                                                     <Alert \n                                                                        key ={item.Id_parcel} \n                                                                        id='AlertButton'\n                                                                        severity=\"success\"\n                                                                        onClick={ ()=>{ SelectAccept(item) } }>\n                                                                        <AlertTitle id='useFont'>รับพัสดุ</AlertTitle>\n                                                                    </Alert> :null\n                                                                    }\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </ListItemText>\n                                                </ListItem>\n                                    </Collapse>\n                                    <Divider />\n                                    </div>\n                                    )})}\n\n                                </List>\n                                </Collapse>\n                        </Card>\n                </Grid>\n            </Grid>\n            \n        </div>\n\n  {/********************************************** Appect-Reject Dialog *************************************************************/}\n                <div className='containter row pl-2'>       \n                    <div className='col col-sm-7 m-3 my-1' id='boxRight'>\n                                <Dialog fullWidth \n                                    open={OpenconfirmAccept} onClose={handleClickCloseConfirmAccept} \n                                    aria-labelledby=\"form-dialog-title\" id='shitDialog2'>\n                                        <h3 id='useFont' className='ml-4 mt-4 mb-3'>การยืนยันรับพัสดุ</h3>\n                                        <DialogContent>\n                                            <DialogContentText id='useFont'>\n                                                หากต้องการที่จะรับ <strong >{PNameR}</strong>  โปรดกรอกชื่อเเละกดปุ่ม <strong>\"ยืนยัน\"</strong>.\n                                            </DialogContentText>\n                                            <form id=\"SENDACC\" name=\"SENDACC\" onSubmit={ handleClickCloseConfirmAcceptWihtAccept }>\n                                                <TextField\n                                                    required\n                                                    autoFocus\n                                                    margin=\"dense\"\n                                                    id=\"name\"\n                                                    label=\"ชื่อผู้รับ\"\n                                                    inputProps={{style: {fontFamily:'Mitr'}}} \n                                                    InputLabelProps={{style: {fontFamily:'Mitr'}}} \n                                                    value={ RRName }\n                                                    type=\"text\"\n                                                    onChange={ RRNameChange }\n                                                    fullWidth/>\n                                                    <br/><br/>\n                                                    {/* <Checkbox\n                                                        checked={checked}\n                                                        onChange={handleChange}\n                                                        value=\"primary\"\n                                                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                                                    /> */}\n                                                    <p id='useFont'>ความครบถ้วนของพัสดุ</p>\n                                                    <Radio\n                                                    \n                                                        checked={checked === 'ครบ'}\n                                                        onChange={handleChange}\n                                                        value=\"ครบ\"\n                                                        color='primary'\n                                                        name=\"radio-button-demo\"\n                                                        inputProps={{ 'aria-label': 'A' }}\n                                                    /><span id='useFont'>ครบ</span>\n                                                    <Radio\n                                                        checked={checked === 'ไม่ครบ'}\n                                                        onChange={handleChange}\n                                                        value=\"ไม่ครบ\"\n                                                        color='secondary'\n                                                        name=\"radio-button-demo\"\n                                                        inputProps={{ 'aria-label': 'B' }}\n                                                    /><span id='useFont'>ไม่ครบ</span>\n                                                    \n                                            </form>\n                                        </DialogContent>\n                                        <DialogActions>\n                                        <Button \n                                            id='AlertButton2' \n                                            variant=\"contained\" \n                                            color=\"secondary\"\n                                            size=\"large\"\n                                            onClick={handleClickCloseConfirmAccept}><AlertTitle id='useFont'>ยกเลิก</AlertTitle>\n                                        </Button>\n                                        <Button \n                                            form=\"SENDACC\"\n                                            type=\"submit\"\n                                            id='AlertButton' \n                                            variant=\"contained\" \n                                            color=\"primary\"\n                                            size=\"large\"\n                                            // onClick={handleClickCloseConfirmAcceptWihtAccept}\n                                            >\n                                                <AlertTitle id='useFont'>ยืนยัน</AlertTitle>\n                                            </Button>\n                                        </DialogActions>\n                                    </Dialog>\n                    </div>\n                </div>         \n            </div>\n        </container>\n    )}\n\nexport default ShitDashboard","import React from 'react';\nimport './App.css';\nimport ShitDashboard from './ShitDashboard';\n\n\nfunction App() {\n  return (\n    <div id='ShitAllofPage'>\n        <ShitDashboard/> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport * as serviceWorker from './serviceWorker';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { render } from \"react-dom\";\n\nimport './fonts/MitrRegular.ttf'\nimport './fonts/OpenSans-Regular.ttf'\n\n\nReactDOM.render(\n<MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <App />\n  </MuiPickersUtilsProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}